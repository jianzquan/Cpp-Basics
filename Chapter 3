# 3-1 数据类型
#include <iostream>
#include <climits>
#include <cmath>

int main()
{
    using namespace std;
    int n_int = INT_MAX; 
    short n_short = SHRT_MAX;
    long n_long = LONG_MAX;
    long long n_llong = LLONG_MAX;

    cout << "int is " << sizeof(int) << " bytes." << endl;
    cout << "short is " << sizeof n_short << " bytes." << endl;
    cout << "long is " << sizeof n_long << " bytes." << endl;
    cout << "long long is " << sizeof n_llong << " bytes." << endl;
    cout << endl;

    cout << "Maximum values: " << endl;
    cout << "int: " << n_int << endl;
    cout << "short: " << n_short << endl;
    cout << "long: " << n_long << endl;
    cout << "long long: " << n_llong << endl << endl;

    cout << "Minimum int value = " << INT_MIN << endl;
    cout << "Bits per byte = " << CHAR_BIT << endl;

    return 0;
}


# 3-2 整型范围
#include <iostream>
#define ZERO 0
#include <climits>
int main()
{
    using namespace std;
    short sam = SHRT_MAX;
    unsigned short sue = sam;

    cout << "Sam has " << sam << " dollars and Sue has " << sue;
    cout << " dollars deposited." << endl
         << "Add $1 to each account." << endl << "Now ";
    sam++;
    sue++;
    cout << "Sam has " << sam << " dollars and Sue has " << sue;
    cout << " dollars deposited. \nPoor Sam!" << endl;
    
    sam = ZERO;
    sue = ZERO;
    cout << "Sam has " << sam << " dollars and Sue has " << sue;
    cout << " dollars deposited." << endl;
    cout << "Take $1 from each account." << endl <<"Now ";

    sam--;
    sue--;
    cout << "Sam has " << sam << " dollars and Sue has " << sue;
    cout << " dollars deposited." << endl << "Lucky Sue" << endl;

    return 0; 
}


# 3-3 数值进制表示
#include <iostream>
int main()
{
    using namespace std;
    int chest = 42;  // 第一位数字为1-9，则基数为10(十进制)
    int waist = 0x42;  // 前两位为0x 或 0X，则基数为16(十六进制)
    int inseam = 042;  // 第一位数字为0，第二位为1-7，则基数为8(八进制)

    cout << "Monsieur cuts a striking figure!\n";
    cout << "chest = " << chest << " (42 in decimal)\n";
    cout << "waist = " << waist << " (0x42 in hex)\n";
    cout << "inseam = " << inseam << " (042 in octal)\n";

    return 0;
}


# 3-4 数字使用其他进制显示
#include <iostream>
using namespace std;
int main()
{
    using namespace std;
    int chest = 42;
    int waist = 42;
    int inseam = 42;

    cout << "Monsieur cuts a striking figure!" << endl;
    cout << dec;  // 修改显示整数方式为 十进制
    cout << "chest = " << chest << " (decimal for 42)" << endl;
    cout << hex;  // 修改显示整数方式为 十六进制
    cout << "waist = " << waist << " (hexadecimal for 42)" << endl;
    cout << oct;  // 修改显示整数方式为 八进制
    cout << "inseam = " << inseam << " (octal for 42)" << endl;

    return 0;
}


# 3-5 字符
#include <iostream>
int main()
{
    using namespace std;
    char ch;

    cout << "Enter a character: " << endl;
    cin >> ch;
    cout << "Hola! ";
    cout << "Thank you for the " << ch << " character." << endl;

    return 0;
}


# 3-6 字符与ASCII码表
#include <iostream>
int main()
{
    using namespace std;
    char ch = 'M';  // 此时 ch 的值是 77，是cout将 ch 显示为 M 的. cout识别到是char型
    int i = ch;  // i 的值也是 77，cout 将 i 显示为 77.
    cout << "The ASCII code for " << ch << " is " << i << endl;

    cout << "Add one to the character code: " << endl;
    ch = ch + 1;
    i = ch;
    cout << "The ASCII code for " << ch << " is " << i << endl;

    cout << "Displaying char ch using cout.put(ch): ";
    cout.put(ch);

    cout.put('!');
    cout << endl << "Done" << endl;

    cout.put(71).put(79).put(79).put(68).put('\n');  // cout.put() 输出单个字符,是字符哦

    return 0;
}


# 3-7 转义字符
#include <iostream>
int main()
{
    using namespace std;
    // \a 振铃; \b 退格
    cout << "\aOperation \"HyperHype\" is now activated!\n";
    cout <<"Enter your agent code:_______\b\b\b\b\b\b\b";
    long code;
    cin >> code;
    cout << "\aYou entered " << code << "...\n";
    cout << "\aCode verified! Proceed with Plan Z3!\n";

    return 0;
}


# 3-8 不同类型数据的有效位数
#include <iostream>
int main()
{
    using namespace std;
    cout.setf(ios_base::fixed, ios_base::floatfield); // fixed-point
    float tub = 10.0 / 3.0;
    double mint = 10.0 / 3.0;
    const float million = 1.0e6;

    cout << "tub = " << tub;
    cout << ", a million tubs = " << million * tub;
    cout << ",\nand ten million tubs = ";
    cout << 10 * million * tub << endl;

    cout << "mint = " << mint << " and a million mints = ";
    cout << million * mint << endl;

    return 0;
}
